import fs from"fs";import path from"path";import url from"url";function content(e){return new Promise(((t,r)=>{let a=[];e.on("data",a.push.bind(a)),e.on("end",(()=>{t(Buffer.concat(a))})),e.on("error",r)}))}async function createReadStream(e){let t;try{t=await fs.promises.open(e,"r")}catch(e){throw["ENOENT"].includes(e.code)?createReadStream.badPath:e}if(!(await t.stat()).isFile())throw t.close(),createReadStream.badPath;return fs.createReadStream(0,{fd:t.fd,autoClose:!1}).on("end",(()=>t.close()))}async function existFile(e){try{return await fs.promises.stat(e),1}catch(e){if("ENOENT"!=e.code)throw e}}function importMetaToDir(e){return path.dirname(new url.URL(e.url).pathname)}function onceSigintOrSigterm(e){function t(){process.off("SIGINT",t).off("SIGTERM",t),e()}process.on("SIGINT",t).on("SIGTERM",t)}createReadStream.badPath=Symbol();var main={content:content,createReadStream:createReadStream,existFile:existFile,importMetaToDir:importMetaToDir,onceSigintOrSigterm:onceSigintOrSigterm};export default main;export{content,createReadStream,existFile,importMetaToDir,onceSigintOrSigterm};