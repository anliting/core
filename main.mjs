import fs from"fs";import path from"path";import url from"url";function content(t){return new Promise(((e,r)=>{let a=[];t.on("data",a.push.bind(a)),t.on("end",(()=>{e(Buffer.concat(a))})),t.on("error",r)}))}async function createReadStream(t){let e;try{e=await fs.promises.open(t,"r")}catch(t){throw["ENOENT"].includes(t.code)?createReadStream.badPath:t}if(!(await e.stat()).isFile())throw e.close(),createReadStream.badPath;return fs.createReadStream(0,{fd:e.fd,autoClose:!1}).on("end",(()=>e.close()))}async function existFile(t){try{return await fs.promises.stat(t),1}catch(t){if("ENOENT"!=t.code)throw t}}function importMetaToDir(t){return path.dirname(new url.URL(t.url).pathname)}function onceSigintOrSigterm(t){function e(){process.off("SIGINT",e).off("SIGTERM",e),t()}process.on("SIGINT",e).on("SIGTERM",e)}createReadStream.badPath=Symbol();var main={content:content,createReadStream:createReadStream,existFile:existFile,importMetaToDir:importMetaToDir,onceSigintOrSigterm:onceSigintOrSigterm};export default main;